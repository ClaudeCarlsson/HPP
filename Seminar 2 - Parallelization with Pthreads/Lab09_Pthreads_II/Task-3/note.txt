The main difference between joinable and detached threads 
is that joinable threads require an  explicit call to 
pthread_join to reclaim the resources used by the thread, 
whereas  detached threads release their resources 
automatically when they terminate. Additionally, if a 
joinable thread is not explicitly joined with another 
thread, it can lead to resource leaks  or other 
issues in the program. 

Therefore, it is generally recommended to use detached 
threads if you do not need to join them with another thread.

#-- First, no change
Main: creating thread 0
Main: creating thread 1
Thread 0 starting...
Main: creating thread 2
Thread 1 starting...
Main: creating thread 3
Thread 2 starting...
Thread 3 starting...
Thread 3 done. Result = 4.931540e+06
Thread 0 done. Result = 4.931540e+06
Main: completed join with thread 0 having a status of 0
Thread 2 done. Result = 4.931540e+06
Thread 1 done. Result = 4.931540e+06
Main: completed join with thread 1 having a status of 1
Main: completed join with thread 2 having a status of 2
Main: completed join with thread 3 having a status of 3
Main: program completed. Exiting.

#-- Second, change to PTHREAD_CREATE_DETACHED
Main: creating thread 0
Main: creating thread 1
Thread 0 starting...
Main: creating thread 2
Thread 1 starting...
Main: creating thread 3
Thread 2 starting...
ERROR; return code from pthread_join() is 22
Thread Thread 3 starting...

#-- Third, remove joins calls
Main: creating thread 0
Main: creating thread 1
Thread 0 starting...
Main: creating thread 2
Thread 1 starting...
Main: creating thread 3
Thread 2 starting...
Main: program completed. Exiting.
Thread 3 starting...
Thread 1 done. Result = 4.931540e+06
Thread 0 done. Result = 4.931540e+06
Thread 3 done. Result = 4.931540e+06
Thread 2 done. Result = 4.931540e+06

#-- Fourth, remove exit call
Main: creating thread 0
Main: creating thread 1
Thread 0 starting...
Main: creating thread 2
Thread 1 starting...
Main: creating thread 3
Thread 2 starting...
Main: program completed. Exiting.
Thread 3 starting...